#include <iostream>
using namespace std;

struct heap
{
    int array[100];
    int size;

    heap()
    {
        array[0] = -1;
        size = 0;
    }

    void insert(int val)
    {
        size = size + 1;
        int index = size;
        array[index] = val;

        while (index > 1)

        {
            int parent = size / 2;
            if (array[index] > array[parent])
            {
                swap(array[index], array[parent]);
                index = parent;
            }
            else
            {
                return;
            }
        }
    }
    void print()
    {
        for (int i = 1; i <= size; i++)
        {
            cout << array[i] << " ";
        }
        cout<<endl;
    }
};

void heapify(int arr[], int n, int i)
{
    int parent = i;
    int lchild = i * 2;
    int rchild = i * 2 + 1;

    if (parent < n && arr[parent] < arr[lchild])
    {
        parent = lchild;
    }
    if (parent < n && arr[parent] < arr[rchild])
    {
        parent = rchild;
    }

    if (parent != i)
    {
        swap(arr[parent], arr[i]);
        heapify(arr, n, parent);
    }
}

int main()
{
    heap h;
    h.insert(50);
    h.insert(55);
    h.insert(53);
    h.insert(52);
    h.insert(54);

    h.print();

    
    cout<<"after heapify "<<endl;

    int arr[6] = {-1, 54, 53, 55, 52, 50};
    int n = 5;
    for (int i = n / 2; i > 0; i--)
    {
        heapify(arr, n, i);
    }

    for (int i = 1; i <=n; i++)
    {
        cout << arr[i]<<" ";
    }
}
