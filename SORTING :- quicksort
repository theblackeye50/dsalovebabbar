#include <iostream>
#include <vector>
#include <unordered_set>
#include <map>
#include <algorithm>
#include <string>
#include <set>
using namespace std;

int partition(int arr[], int s, int e)
{
    int pivot=arr[s];

    int cnt=0;

    for(int i=s+1;i<=e;i++)
    {
        if(pivot>=arr[i])
        {
            cnt++;
        }
    }
    // place pivot at right postion
    int pivotindex=s+cnt;
    swap(arr[pivotindex],arr[s]);

    // left and right wala part ko sambhal lo
     
     int i=s;
     int j=e;

    while(i<pivotindex && j>pivotindex)
    {
        while(arr[i]<=pivot)
        {
            i++;
        }

        while(arr[j]>=pivot)
        {
            j--;
        }

        if(i<pivotindex && j>pivotindex)
        {
            swap(arr[i++], arr[j--]);
        }
    }

    return pivotindex;
}




void quicksort(int arr[], int s, int e)
{
    // base case
    if(s>=e)
    {
        return ;
    }
    // partion kro
    int p=partition(arr,s,e);

    // left part sort kro

    quicksort(arr,s,p-1);
    
    // right bala sort kro
    quicksort(arr,p+1,e);


}


int main()
{
    int arr[11]={4,3,1,5,2,8,12,9,20,17};
    int n=11;

   quicksort(arr,0,n-1);

    for(int i=0;i<n;i++)
    {
        cout<<arr[i]<<" ";
    }
    cout<<endl;

    return 0;
}
